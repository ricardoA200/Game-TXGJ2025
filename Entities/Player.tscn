[gd_scene load_steps=23 format=3 uid="uid://durf4fw0iv0bu"]

[ext_resource type="Texture2D" uid="uid://bwbtqkpgb1yej" path="res://Assets/oogawalkNB.sprites/oogawalkNB.png" id="2_2a4id"]
[ext_resource type="Texture2D" uid="uid://c5crydb3862ln" path="res://Assets/egyptwalkNB/spear_throw/spear1-removebg-preview.png" id="3_io258"]
[ext_resource type="Texture2D" uid="uid://bh5adf4p5kjji" path="res://Assets/egyptwalkNB/spear_throw/spear2-removebg-preview.png" id="4_w6hej"]
[ext_resource type="Texture2D" uid="uid://sm2l7v667vo4" path="res://Assets/egyptwalkNB/egyptwalk.png" id="5_drum4"]
[ext_resource type="Texture2D" uid="uid://1yv6v0n0nc87" path="res://Assets/egyptwalkNB/spear_throw/spear3-removebg-preview.png" id="5_nn0oq"]
[ext_resource type="Texture2D" uid="uid://cp3pc2rjqe5p5" path="res://Assets/egyptwalkNB/spear_throw/spear4-removebg-preview.png" id="6_ry37w"]

[sub_resource type="GDScript" id="GDScript_kyqiw"]
resource_name = "Player "
script/source = "extends CharacterBody2D

class_name Player

signal health_change # Will need to be emitted when player takes damage  or heals
signal dashUp
signal spearThrown

@export var maxHealth = 100
@onready var current_health: int = 100

@onready var currentSprite : AnimatedSprite2D = $caveAnims
@onready var cavemanSprite = $caveAnims
@onready var spearmanSprite = $egyptAnims
@onready var attackHitBox = $AttackArea01/AttackHitBox
@onready var playerHitBox = $HitBox
@onready var spearProj = load(\"res://Scenes/spear_projectile.tscn\")

@onready var world = get_parent()


const SPEED = 400.0
const JUMP_VELOCITY = -300.0

var jumped = 0
var jumps = 2
var isAttacking = false
var hasThrown = false
var throwing = false
var dashReady = true
var dashSpeed := 1
var form := \"Caveman\"


#func _ready():
	
var can_take_damage: bool = true
var spear_instance : Node = null



func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and (is_on_floor() or form == \"Caveman\") and (jumps > jumped):
		velocity.y = JUMP_VELOCITY
		jumped += 1
	elif is_on_floor():
		jumped = 0
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	
	if direction:
		velocity.x = direction * SPEED * dashSpeed
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED) * dashSpeed
		

	move_and_slide()
func _process(delta):
	handleInputs()
	animationHandler()

func attack():
	if form == \"Caveman\":
		currentSprite.play(\"attack\") ###Caveman animation
		attackHitBox.disabled = false
		await get_tree().create_timer(0.5).timeout
		attackHitBox.disabled = true
		isAttacking = false
	
func throw():
	spear_instance = spearProj.instantiate()
	if world:
		var dir_vec = ((get_global_mouse_position() - global_position).normalized())
		
		spear_instance.dir = dir_vec
		spear_instance.spawnPos = position
		spear_instance.spawnRot = dir_vec.angle()
		world.add_child(spear_instance)
		spearThrown.emit(true)
	
func dash():
	dashReady = false
	dashUp.emit(false)
	dashSpeed = 4
	var timer = get_tree().create_timer(0.1) # .1 second delay
	await timer.timeout
	
	dashSpeed = 1
	
	var cooldown = get_tree().create_timer(1.5) # 3 second delay
	cooldown.timeout.connect(_dash_cooldown)
	
func _dash_cooldown():
	dashUp.emit(true)
	dashReady = true; 
	
func take_damage(amount: int):
	if not can_take_damage:
		return  # ignore if still in cooldown

	current_health -= amount
	health_change.emit(current_health) # signals to the hud to update the health bar

	can_take_damage = false
	# start cooldown
	var timer = get_tree().create_timer(1.0) # 1 second delay
	timer.timeout.connect(_on_damage_cooldown_finished)
	health_change.emit()
	pass
	
func _on_damage_cooldown_finished():
		can_take_damage = true
	
func handleInputs():
	
	if Input.is_action_just_pressed(\"formSwitch\"):
		if form == \"Spearman\":
			form = \"Caveman\"
		elif form == \"Caveman\":
			form = \"Spearman\"
		updateForm()

	if Input.is_action_just_pressed(\"attack\"):
		if form == \"Spearman\" and not hasThrown:
			throwing = true
			hasThrown = true
		if form == \"Caveman\" and not isAttacking:
			attack() #chat wanted isAttacking = true out that goes above attack()
			
	if Input.is_action_just_pressed(\"ability\"):
		if form == \"Spearman\" and dashReady:
			dash()
	
	if Input.is_action_just_pressed(\"spearReturn\"):
		if spear_instance and spear_instance.is_inside_tree():
			spear_instance.queue_free()
			spear_instance = null
			hasThrown = false
			spearThrown.emit(false)
	
func updateForm():
	if form == \"Caveman\":
		currentSprite = cavemanSprite
		cavemanSprite.visible = true
		spearmanSprite.visible = false
		jumps = 2
	elif form == \"Spearman\" or throwing:
		currentSprite = spearmanSprite
		cavemanSprite.visible = false
		spearmanSprite.visible = true
		jumps = 1

func animationHandler():
	if throwing:
		currentSprite.animation = \"spear_throw\"
		currentSprite.play()
		currentSprite.animation_finished.connect(endThrow)
	if not throwing:
		if velocity.x != 0:
			currentSprite.animation = \"walk_right\"
			currentSprite.flip_h = (velocity.x < 0)
		else:
			currentSprite.animation = \"idle_right\"
		currentSprite.play()
		
func endThrow():
	throwing = false
	throw()
		
	
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_kyqiw"]
radius = 20.0
height = 86.666664

[sub_resource type="AtlasTexture" id="AtlasTexture_2a4id"]
atlas = ExtResource("2_2a4id")
region = Rect2(3, 292, 220, 305)

[sub_resource type="AtlasTexture" id="AtlasTexture_drum4"]
atlas = ExtResource("2_2a4id")
region = Rect2(0, 0, 227, 291)

[sub_resource type="SpriteFrames" id="SpriteFrames_8td47"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2a4id")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2a4id")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2a4id")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2a4id")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_drum4")
}],
"loop": true,
"name": &"idle_right",
"speed": 3.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2a4id")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_drum4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2a4id")
}],
"loop": true,
"name": &"walk_right",
"speed": 5.0
}]

[sub_resource type="AtlasTexture" id="AtlasTexture_opvli"]
atlas = ExtResource("5_drum4")
region = Rect2(0, 0, 221, 291)

[sub_resource type="AtlasTexture" id="AtlasTexture_ph751"]
atlas = ExtResource("5_drum4")
region = Rect2(0, 1164, 221, 291)

[sub_resource type="AtlasTexture" id="AtlasTexture_cfvty"]
atlas = ExtResource("3_io258")
region = Rect2(19, 15, 313, 442)

[sub_resource type="AtlasTexture" id="AtlasTexture_hmggr"]
atlas = ExtResource("4_w6hej")
region = Rect2(19, 33, 313, 442)

[sub_resource type="AtlasTexture" id="AtlasTexture_1v5ml"]
atlas = ExtResource("5_nn0oq")
region = Rect2(19, 33, 363, 442)

[sub_resource type="AtlasTexture" id="AtlasTexture_yytyf"]
atlas = ExtResource("6_ry37w")
region = Rect2(19, 33, 452, 438)

[sub_resource type="AtlasTexture" id="AtlasTexture_a0vkg"]
atlas = ExtResource("5_drum4")
region = Rect2(0, 291, 221, 291)

[sub_resource type="AtlasTexture" id="AtlasTexture_rtjgs"]
atlas = ExtResource("5_drum4")
region = Rect2(0, 582, 221, 291)

[sub_resource type="AtlasTexture" id="AtlasTexture_h7dcw"]
atlas = ExtResource("5_drum4")
region = Rect2(0, 873, 221, 291)

[sub_resource type="SpriteFrames" id="SpriteFrames_k5has"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_opvli")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_opvli")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_opvli")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_opvli")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ph751")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ph751")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ph751")
}],
"loop": true,
"name": &"idle_right",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_cfvty")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hmggr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1v5ml")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yytyf")
}],
"loop": false,
"name": &"spear_throw",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_opvli")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ph751")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a0vkg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rtjgs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a0vkg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h7dcw")
}],
"loop": true,
"name": &"walk_right",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_rpqav"]
size = Vector2(106.75, 95.25)

[node name="Player" type="CharacterBody2D"]
scale = Vector2(0.5, 0.5)
collision_mask = 9
script = SubResource("GDScript_kyqiw")

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(-1, -2)
scale = Vector2(0.5, 0.5)
zoom = Vector2(1.5, 1.5)

[node name="HitBox" type="CollisionShape2D" parent="."]
position = Vector2(22, -12)
scale = Vector2(1.2, 1.2)
shape = SubResource("CapsuleShape2D_kyqiw")

[node name="caveAnims" type="AnimatedSprite2D" parent="."]
position = Vector2(6, -6)
scale = Vector2(0.4, 0.41)
sprite_frames = SubResource("SpriteFrames_8td47")
animation = &"idle_right"
autoplay = "idle_right"

[node name="egyptAnims" type="AnimatedSprite2D" parent="."]
visible = false
position = Vector2(6.0000005, -9.999999)
scale = Vector2(0.38518098, 0.3954038)
sprite_frames = SubResource("SpriteFrames_k5has")
animation = &"spear_throw"
frame = 3
frame_progress = 1.0

[node name="AttackArea01" type="Area2D" parent="."]
position = Vector2(14.999999, -27.999998)
scale = Vector2(0.5, 0.5)
collision_layer = 2
collision_mask = 4

[node name="AttackHitBox" type="CollisionShape2D" parent="AttackArea01"]
top_level = true
position = Vector2(50.3125, -4.1875)
scale = Vector2(0.5, 0.5)
shape = SubResource("RectangleShape2D_rpqav")
disabled = true
debug_color = Color(0.32317686, 0.5522869, 0.7861259, 0.41960785)

[connection signal="animation_finished" from="egyptAnims" to="." method="_on_egypt_anims_animation_finished"]
